       __
       \ \
  ___   \ \
  ___    . \
  ___   / ^ \
       /_/ \_\

Unbounded, a Lambda Calculus interpreter

Usage: unbounded [-h] [-q | -v] [-e 'expression']

Default operation is to evaluate expressions in an interactive REPL.  End of input is system defined.  

  -h                prints this help message.
  -q                run quietly.
  -v                verbose tracing.
  -e 'expression'   evaluate the expression in non-interactive mode.

Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... Variable: a
... Variable: s
... Variable: d
... Variable: f
... #
-> (asdf)
Unbounded> 
... Variable: a
... Variable: s
... Variable: d
... Variable: f
... #
-> (asdf)
Unbounded> 
... Variable: a
... Variable: s
... Variable: d
... Variable: f
LAMBDA.SYNTAX_ERROR: Invalid character in asdf	# Trailing comments - tab
Unbounded> 
... Variable: a
... Variable: s
... Variable: d
... Variable: f
LAMBDA.SYNTAX_ERROR: Invalid character in asdf	  # Trailing comments - mixed
Unbounded> 
... Variable: a
... Variable: s
... Variable: d
... Variable: f
... #
-> (asdf)
Unbounded> 
... #
-> 
Unbounded> 
-> 
Unbounded> 
... #
-> 
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
... Variable: d
... Variable: e
... Variable: f
... Variable: g
... Variable: h
... Variable: i
... Variable: j
... Variable: k
... Variable: l
... Variable: m
... Variable: n
... Variable: o
... Variable: p
... Variable: q
... Variable: r
... Variable: s
... Variable: t
... Variable: u
... Variable: v
... Variable: w
... Variable: x
... Variable: y
... Variable: z
... Synonym: A
... Synonym: B
... Synonym: C
... Synonym: D
... Synonym: E
... Synonym: F
... Synonym: G
... Synonym: H
... Synonym: I
... Synonym: J
... Synonym: K
... Synonym: L
... Synonym: M
... Synonym: N
... Synonym: O
... Synonym: P
... Synonym: Q
... Synonym: R
... Synonym: S
... Synonym: T
... Synonym: U
... Synonym: V
... Synonym: W
... Synonym: X
... Synonym: Y
... Synonym: Z
... Variable: a
... Variable: b
... Variable: c
... Variable: d
... Variable: e
... Variable: f
... Variable: g
... Variable: h
... Variable: i
... Variable: j
... Variable: k
... Variable: l
... Variable: m
... Variable: n
... Variable: o
... Variable: p
... Variable: q
... Variable: r
... Variable: s
... Variable: t
... Variable: u
... Variable: v
... Variable: w
... Variable: x
... Variable: y
... Variable: z
-> (abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
... Variable: d
... Variable: e
-> (abcde)
Unbounded> 
... #
-> 
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
... Variable: d
... Variable: e
-> (abcde)
Unbounded> 
... Variable: a
LAMBDA.SYNTAX_ERROR: Invalid character in a	b	c	d	e
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
... Variable: d
... Variable: e
-> (abcde)
Unbounded> 
... Variable: a
... Variable: b
LAMBDA.SYNTAX_ERROR: Invalid character in a b	 c_d_e
Unbounded> 
... Variable: a
LAMBDA.SYNTAX_ERROR: Invalid character in a _	bcde
Unbounded> 
... #
-> 
Unbounded> 
... (
...  Variable: a
...  Variable: b
...  Variable: c
... )
-> (abc)
Unbounded> 
... (
...  Variable: a
...  Variable: b
...  Variable: c
... )
... Variable: d
... Variable: e
-> (abc)de
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
... (
...  Variable: d
...  Variable: e
...  (
...   Variable: f
...   Variable: g
...  )
... )
-> (abc(de(fg)))
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
... (
...  Variable: d
...  Variable: e
...  (
...   Variable: f
...   Variable: g
...  )
... )
... Variable: h
... Variable: i
... Variable: j
... Variable: k
-> (abc(de(fg))hijk)
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
... (
...  Variable: d
...  Variable: e
...  (
...   Variable: f
...   Variable: g
...   Variable: h
...  )
...  Variable: i
... )
... Variable: j
... Variable: k
-> (abc(de(fgh)i)jk)
Unbounded> 
... Variable: a
... (
...  Variable: b
...  (
...   Variable: c
...   (
...    Variable: d
...    (
...     Variable: e
...     (
...      Variable: f
...      (
...       Variable: g
...      )
...     )
...    )
...   )
...  )
... )
-> (a(b(c(d(e(f(g)))))))
Unbounded> 
... #
-> 
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
... (
...  Variable: d
...  Variable: e
...  Variable: f
... )
... (
...  Variable: g
...  Variable: h
... )
... Variable: i
... Variable: j
... Variable: k
-> (abc(def)(gh)ijk)
Unbounded> 
... Synonym: I
... Synonym: I
... Synonym: I
... #
-> (III)
Unbounded> 
... (
...  Variable: a
...  Variable: b
...  Variable: c
... )
... (
...  Variable: d
...  Variable: e
...  Variable: f
... )
... Synonym: I
-> (abc)(def)I
Unbounded> 
... (
...  Variable: a
...  Variable: b
...  Variable: c
... )
... Synonym: J
... (
...  Variable: d
...  Variable: e
...  Variable: f
... )
-> (abc)J(def)
Unbounded> 
... #
-> 
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
LAMBDA.SYNTAX_ERROR: Unmatched ')' in abc)
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
LAMBDA.SYNTAX_ERROR: Unmatched ')' in abc)de
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
... (
...  Variable: d
...  Variable: e
... )
LAMBDA.SYNTAX_ERROR: Unmatched ')' in abc(de))fg
Unbounded> 
... #
-> 
Unbounded> 
... (
...  Variable: a
...  Variable: b
...  Variable: c
LAMBDA.SYNTAX_ERROR: Missing ')' in (abc
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
... (
...  Variable: d
...  Variable: e
...  Variable: f
...  (
...   Variable: g
...   Variable: h
...  )
...  Variable: i
...  Variable: j
...  Variable: k
LAMBDA.SYNTAX_ERROR: Missing ')' in abc(def(gh)ijk
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
... (
...  Variable: d
...  Variable: e
...  Variable: f
...  (
...   Variable: g
...   Variable: h
...  )
LAMBDA.SYNTAX_ERROR: Missing ')' in abc(def(gh)
Unbounded> 
-> 
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... Function - Variables
...  Variable: a
...  Variable: b
...  Variable: c
... Function - Expression
...  Variable: d
...  Variable: e
-> (?abc.(de))
Unbounded> 
... Function - Variables
...  Variable: a
...  Variable: b
...  Variable: c
... Function - Expression
...  Variable: d
...  Variable: e
-> (&abc.(de))
Unbounded> 
... Function - Variables
...  Variable: a
...  Variable: b
...  Variable: c
... Function - Expression
...  Variable: d
...  Variable: e
-> (\abc.(de))
Unbounded> 
... #
-> 
Unbounded> 
... Function - Variables
...  Variable: x
... Function - Expression
...  Variable: x
-> (?x.(x))
Unbounded> 
... Function - Variables
...  Variable: x
... Function - Expression
...  Variable: x
-> (&x.(x))
Unbounded> 
... Function - Variables
...  Variable: x
... Function - Expression
...  Variable: x
-> (\x.(x))
Unbounded> 
... Function - Variables
...  Variable: f
... Function - Expression
...  (
...   Function - Variables
...    Variable: x
...   Function - Expression
...    Variable: f
...    (
...     Variable: x
...     Variable: x
...    )
...   .
...  )
...  (
...   Function - Variables
...    Variable: x
...   Function - Expression
...    Variable: f
...    (
...     Variable: x
...     Variable: x
...    )
...   .
...  )
-> (?f.(?x.(f(xx)))(?x.(f(xx))))
Unbounded> 
... Function - Variables
...  Variable: f
... Function - Expression
...  (
...   Function - Variables
...    Variable: x
...   Function - Expression
...    Variable: f
...    (
...     Variable: x
...     Variable: x
...    )
...   .
...  )
...  (
...   Function - Variables
...    Variable: x
...   Function - Expression
...    Variable: f
...    (
...     Variable: x
...     Variable: x
...    )
...   .
...  )
-> (&f.(&x.(f(xx)))(&x.(f(xx))))
Unbounded> 
... Function - Variables
...  Variable: f
... Function - Expression
...  (
...   Function - Variables
...    Variable: x
...   Function - Expression
...    Variable: f
...    (
...     Variable: x
...     Variable: x
...    )
...   .
...  )
...  (
...   Function - Variables
...    Variable: x
...   Function - Expression
...    Variable: f
...    (
...     Variable: x
...     Variable: x
...    )
...   .
...  )
-> (\f.(\x.(f(xx)))(\x.(f(xx))))
Unbounded> 
... Function - Variables
...  Variable: f
... Function - Expression
...  (
...   Function - Variables
...    Variable: x
...   Function - Expression
...    Variable: f
...    (
...     Variable: x
...     Variable: x
...    )
...   .
...  )
...  (
...   Function - Variables
...    Variable: x
...   Function - Expression
...    Variable: f
...    (
...     Variable: x
...     Variable: x
...    )
...   .
...  )
-> (&f.(?x.(f(xx)))(\x.(f(xx))))
Unbounded> 
... #
-> 
Unbounded> 
... Function - Variables
...  Variable: x
... Function - Expression
...  Variable: x
...  Variable: y
-> (?x.(xy))
Unbounded> 
... Function - Variables
...  Variable: x
...  Variable: y
... Function - Expression
...  Variable: x
-> (?xy.(x))
Unbounded> 
... #
-> 
Unbounded> 
... Function - Variables
...  Variable: a
...  Variable: b
...  Variable: c
LAMBDA.SYNTAX_ERROR: Malformed function declaration in ?abc
Unbounded> 
... Function - Variables
LAMBDA.SYNTAX_ERROR: Malformed function declaration in ?
Unbounded> 
... Function - Variables
LAMBDA.SYNTAX_ERROR: Malformed function declaration in ?(abc)
Unbounded> 
... #
-> 
Unbounded> 
... Variable: a
... Variable: b
... Variable: c
LAMBDA.SYNTAX_ERROR: Unexpected '.' - no function declared in abc.de
Unbounded> 
-> 
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
... Synonym: A
... = 
-> A=()
Unbounded> 
... Synonym: B
... = 
... Variable: a
... Variable: b
... Variable: c
... Variable: d
... Variable: e
... Variable: f
-> B=(abcdef)
Unbounded> 
... Synonym: C
... = 
... Function - Variables
...  Variable: a
...  Variable: b
...  Variable: c
... Function - Expression
...  Variable: d
...  Variable: e
...  Variable: f
...  Variable: g
-> C=(?abc.(defg))
Unbounded> 
... Synonym: D
... = 
... #
-> D=()
Unbounded> 
... Synonym: E
... = 
... #
-> E=()
Unbounded> 
... Synonym: F
... = 
... (
...  Variable: a
...  Variable: b
...  Variable: c
... )
... Variable: d
... Variable: e
... Variable: f
-> F=(abc)def
Unbounded> 
... Synonym: G
... = 
... Synonym: H
-> G=(H)
Unbounded> 
... Synonym: I
... = 
... Variable: a
... Variable: b
... (
...  Variable: c
...  Variable: d
... )
-> I=(ab(cd))
Unbounded> 
... Synonym: J
... = 
... Variable: a
... Variable: b
... (
...  Variable: c
...  Variable: d
... )
... Variable: e
-> J=(ab(cd)e)
Unbounded> 
... Synonym: K
... = 
... Variable: a
... Variable: b
... (
...  Function - Variables
...   Variable: c
...  Function - Expression
...   Variable: d
...  .
... )
... Variable: e
-> K=(ab(?c.(d))e)
Unbounded> 
... #
-> 
Unbounded> 
... Synonym: I
... = 
... Function - Variables
...  Variable: x
... Function - Expression
...  Variable: x
-> I=(?x.(x))
Unbounded> 
... Synonym: Y
... = 
... Function - Variables
...  Variable: f
... Function - Expression
...  (
...   Function - Variables
...    Variable: x
...   Function - Expression
...    Variable: f
...    (
...     Variable: x
...     Variable: x
...    )
...   .
...  )
...  (
...   Function - Variables
...    Variable: x
...   Function - Expression
...    Variable: f
...    (
...     Variable: x
...     Variable: x
...    )
...   .
...  )
-> Y=(?f.(?x.(f(xx)))(?x.(f(xx))))
Unbounded> 
... #
-> 
Unbounded> 
... Synonym: A
... Synonym: B
... Synonym: C
LAMBDA.SYNTAX_ERROR: Unexpected Synonym assignment in ABC=abc
Unbounded> 
... Synonym: A
... = 
... Synonym: B
LAMBDA.SYNTAX_ERROR: Unexpected Synonym assignment in A=B=C
Unbounded> 
... Variable: a
LAMBDA.SYNTAX_ERROR: Unexpected Synonym assignment in a=bcd
Unbounded> 
... #
-> 
Unbounded> 
... Function - Variables
...  Variable: x
... Function - Expression
PROGRAM_ERROR: Buffer overflow in ?x.
Unbounded> 
... #
-> 
Unbounded> 
... #
-> 
Unbounded> 
. List saved expressions
A=()
B=(abcdef)
C=(?abc.(defg))
D=()
E=()
F=(abc)def
G=(H)
I=(?x.(x))
J=(ab(cd)e)
K=(ab(?c.(d))e)
Y=(?f.(?x.(f(xx)))(?x.(f(xx))))
Unbounded> 
. Trace on
Unbounded> 
. Trace off
Unbounded> 

Bye
